{
    "contents" : "getrankhospital <- function(outcomeofcaremeasures, state, outcome) {\n  prefix <- \"Hospital 30-Day Death \\\\(Mortality\\\\) Rates from\"\n  colName <- paste(prefix, outcome, sep = \" \")\n  columnIndex <- grep(paste(\"^\", colName, \"$\", sep = \"\"), colnames(outcomeofcaremeasures), ignore.case = TRUE)\n  wantedData <- outcomeofcaremeasures[outcomeofcaremeasures[, \"State\"] == state & outcomeofcaremeasures[, columnIndex] != \"Not Available\", c(2, columnIndex)]\n  wantedData[, 2] <- sapply(wantedData[, 2], as.numeric)\n  \n  wantedData <- wantedData[order(wantedData[, 2], wantedData[, 1]),]\n  wantedData$Rank <- 1:nrow(wantedData)\n  \n  wantedData\n}\n\nrankall <- function(outcome, num = \"best\") {\n  ## Read outcome data\n  outcomeofcaremeasures <- read.csv(\"rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv\",\n                                    colClasses = \"character\", header = TRUE, check.names = FALSE)\n  ## Check that outcome are valid\n  if (length(grep(paste(\"from\", outcome, sep=\" \"), colnames(outcomeofcaremeasures), ignore.case = TRUE)) == 0) {\n    stop(\"invalid outcome\")\n  }\n  ## For each state, find the hospital of the given rank\n  orderedStates <- sort(unique(outcomeofcaremeasures$State))\n  \n  result <- data.frame(hospital = character(), state = character(), stringsAsFactors=FALSE)\n  for (state in orderedStates) {\n    wantedData <- getrankhospital(outcomeofcaremeasures, state, outcome)\n    hospitalName <- \"\"\n    \n    if (num == \"best\") {\n      hospitalName <- wantedData[1, 1]\n    } else if (num == \"worst\") {\n      hospitalName <- wantedData[nrow(wantedData), 1]\n    } else if (is.numeric(num) && num == as.integer(num)) {\n      if (num <= nrow(wantedData)) {\n        hospitalName <- wantedData[num, 1]\n      } else {\n        hospitalName <- NA\n      }\n    } else {\n      stop(\"invalid num\")\n    }\n    \n    df <- data.frame(row.names = state, hospital = hospitalName, state = state, stringsAsFactors=FALSE)\n    result <- rbind(result, df)\n  }\n  \n  ## Return a data frame with the hospital names and the\n  ## (abbreviated) state name\n  result\n}",
    "created" : 1422594341319.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "494101946",
    "id" : "41DFFBEE",
    "lastKnownWriteTime" : 1422601674,
    "path" : "D:/Study/R/rankall.R",
    "project_path" : "rankall.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}