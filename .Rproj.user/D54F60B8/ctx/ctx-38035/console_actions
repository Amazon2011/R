{
    "data" : [
        "\nR version 3.1.2 (2014-10-31) -- \"Pumpkin Helmet\"\nCopyright (C) 2014 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "[Workspace loaded from D:/Study/R/.RData]\n\n",
        "> ",
        "x <- 1:4",
        "> ",
        "lapply(x, runif)",
        "[[1]]\n[1] 0.5759116\n\n[[2]]\n[1] 0.7608069 0.3267858\n\n[[3]]\n[1] 0.7407085 0.5738620 0.7670164\n\n[[4]]\n[1] 0.4206015 0.3206756 0.3791128 0.7247918\n\n",
        "> ",
        "lapply(x, runif, min = 0, max = 100)",
        "[[1]]\n[1] 93.73751\n\n[[2]]\n[1] 30.37840 21.43549\n\n[[3]]\n[1] 42.59596 18.11346 68.86584\n\n[[4]]\n[1] 46.20511 86.67323 64.39354 16.35249\n\n",
        "> ",
        "x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 2, 3))",
        "> ",
        "lapply(x, function(elt) elt[, 1])",
        "$a\n[1] 1 2\n\n$b\n[1] 1 2\n\n",
        "> ",
        "x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))",
        "> ",
        "lapply(x, function(elt) elt[, 1])",
        "$a\n[1] 1 2\n\n$b\n[1] 1 2 3\n\n",
        "> ",
        "x <- matrix(rnorm(200), 20, 10)",
        "> ",
        "apply(x, 2, mean)",
        " [1]  0.15856477 -0.53990873 -0.08955983 -0.25451680  0.32483820  0.16954378 -0.29545109 -0.28626874  0.19856511 -0.31688305\n",
        "> ",
        "apply(x, 1, mean)",
        " [1] -0.07510756 -0.30087689 -0.16733477 -0.03448811 -0.62485539  0.45983403  0.39042959 -0.69636515  0.33052512 -0.14380763\n[11] -0.62984723  0.16695355 -0.03133910 -0.35408790  0.23433185 -0.69870702 -0.03026908  0.12456401 -0.05667150  0.27496642\n",
        "> ",
        "apply(x, 1, sum)",
        " [1] -0.7510756 -3.0087689 -1.6733477 -0.3448811 -6.2485539  4.5983403  3.9042959 -6.9636515  3.3052512 -1.4380763\n[11] -6.2984723  1.6695355 -0.3133910 -3.5408790  2.3433185 -6.9870702 -0.3026908  1.2456401 -0.5667150  2.7496642\n",
        "> ",
        "rowmeans(x)",
        "Error: could not find function \"rowmeans\"\n",
        "> ",
        "rowMeans(x)",
        " [1] -0.07510756 -0.30087689 -0.16733477 -0.03448811 -0.62485539  0.45983403  0.39042959 -0.69636515  0.33052512 -0.14380763\n[11] -0.62984723  0.16695355 -0.03133910 -0.35408790  0.23433185 -0.69870702 -0.03026908  0.12456401 -0.05667150  0.27496642\n",
        "> ",
        "a <- array(rnorm(2 * 2 * 10), c(2, 2, 10))",
        "> ",
        "a",
        ", , 1\n\n          [,1]       [,2]\n[1,] 0.3925454 1.24471303\n[2,] 2.3187262 0.08275998\n\n, , 2\n\n           [,1]       [,2]\n[1,] -1.2590225 -0.8698930\n[2,] -0.4389411  0.6841205\n\n, , 3\n\n           [,1]       [,2]\n[1,] -0.7655653 -0.9938366\n[2,]  0.4070352 -0.2863938\n\n, , 4\n\n           [,1]       [,2]\n[1,]  0.9495153 -0.3601624\n[2,] -1.7460710  1.3478485\n\n, , 5\n\n           [,1]       [,2]\n[1,] -0.3248371  0.3762567\n[2,] -1.1391075 -0.1660477\n\n, , 6\n\n           [,1]       [,2]\n[1,] -1.9561112  0.6563286\n[2,] -0.4015239",
        " -0.6778991\n\n, , 7\n\n           [,1]       [,2]\n[1,]  1.7584740  1.1630841\n[2,] -0.8209528 -0.7778514\n\n, , 8\n\n           [,1]      [,2]\n[1,] -0.8614837 0.7294645\n[2,] -4.5113672 1.5175892\n\n, , 9\n\n         [,1]       [,2]\n[1,] 1.192920  0.7312586\n[2,] 2.384989 -0.6561582\n\n, , 10\n\n           [,1]      [,2]\n[1,]  0.5884006 0.4641344\n[2,] -1.5171796 1.5475881\n\n",
        "> ",
        "apply(x, c(1, 2), mean)",
        "             [,1]          [,2]          [,3]        [,4]        [,5]        [,6]       [,7]        [,8]        [,9]\n [1,]  0.55577289  0.5021289825  0.9704970759 -1.22008554 -0.69222071  0.31736755 -1.6241183  0.35951037  0.25196418\n [2,] -0.06361339 -0.2643530289 -1.2511829467 -0.59121906  0.02381657  0.39788489  0.6182691 -0.98075218 -1.07601158\n [3,]  0.03466335  0.6255913502 -0.5090979317 -0.54973350  0.69157036 -1.24625742 -1.0854785 -0.91930767  0.05954972\n [4,]  0.24789266 -1.9789104070  0.5198586105",
        " -0.88801557 -0.87811185  0.19730034  0.4478099  0.80686857  0.34306592\n [5,] -0.65119649  0.0979320891 -1.7677142879 -0.09855905  1.57009919 -0.35357132 -0.6973078 -2.37885523 -0.26774524\n [6,] -0.08515355  1.2736800582  0.4075819628  1.12363822  1.43094658  1.37845303 -0.1780606 -0.95061209 -0.06698484\n [7,]  1.35098732  0.2724255012 -0.0009090906  0.60483117  1.15268500  0.16663961  0.3433158 -0.59978598  0.89503900\n [8,] -0.28474755 -0.3965389517 -0.8593838963 -0.22861434 -1.06047111 -0.13751279 -0.0257737",
        " -1.91420702 -0.67364665\n [9,]  1.52806642 -0.0005804726  1.7728231587 -0.68898899  0.61946930 -0.39436140 -1.6092034  0.58709203  1.77067529\n[10,] -1.60121217 -1.8432616648  0.6552347869 -0.53350970  0.99020496 -0.68024980  1.2178447 -0.50210794  0.74876992\n[11,] -0.02195232 -0.2254732014 -1.4812468181 -0.95624722  0.98079978 -2.05049236 -0.4534743  0.07218913 -1.88696297\n[12,]  0.77144839 -0.7991143726  0.3798100994  0.69564405  1.07725643  2.27387859 -1.7779452 -0.75863652  0.08834482\n[13,] -0.15610968 -1.4193324813",
        "  1.3807943172 -0.70021413  0.63676871  0.35453539 -0.3001813  0.28954811 -0.31595563\n[14,] -1.63233932 -1.2777430412 -0.2446309182 -2.35082121  1.37991940  0.04665261  1.4135134 -0.74579036 -0.46286784\n[15,]  0.60056568 -1.3353804284  0.5177319469 -0.97511162 -0.40471073  1.46799101 -0.6777226  0.85695074  1.72885690\n[16,] -0.02576740 -1.2277963901 -0.6882713338 -0.79851157 -1.52797130  0.23906706 -0.5651964 -0.78497923 -0.53002890\n[17,]  0.69596600 -0.6994536067  1.4168139715  0.43689784  0.19479278 -0.52481290",
        " -1.9160985  0.50409955  0.73818695\n[18,]  0.72935876 -0.7650719860 -1.0366381542  0.49750496 -0.20924552  1.95600418  0.1891519  0.11285040  0.95875381\n[19,]  0.47950612 -0.4922079670 -1.2763381691  1.56366727 -0.44647968 -0.50597903 -0.4501839  0.65848129  0.08203908\n[20,]  0.69915959 -0.8447146550 -0.6969290260  0.56711195  0.96764585  0.48833844  1.2218180  0.56206915  1.58626026\n            [,10]\n [1,] -0.17189207\n [2,]  0.17839278\n [3,]  1.22515255\n [4,]  0.83736072\n [5,] -1.70163585\n [6,]  0.26485157",
        "\n [7,] -0.28093242\n [8,] -1.38275551\n [9,] -0.27974070\n[10,]  0.11021063\n[11,] -0.27561201\n[12,] -0.28115086\n[13,] -0.08324425\n[14,]  0.33322827\n[15,]  0.56414760\n[16,] -1.07761475\n[17,] -1.14908291\n[18,] -1.18702832\n[19,] -0.17922002\n[20,] -1.80109537\n",
        "> ",
        "apply(a, c(1, 2), mean)",
        "            [,1]      [,2]\n[1,] -0.02851641 0.3141348\n[2,] -0.54643922 0.2615556\n",
        "> ",
        "rowMeans(a, dims = 2)",
        "            [,1]      [,2]\n[1,] -0.02851641 0.3141348\n[2,] -0.54643922 0.2615556\n",
        "> ",
        "rowMeans(a, dims = 1)",
        "[1]  0.1428092 -0.1424418\n",
        "> ",
        "rowMeans(a, dims = 2)",
        "            [,1]      [,2]\n[1,] -0.02851641 0.3141348\n[2,] -0.54643922 0.2615556\n",
        "> ",
        "rowMeans(a, dims = 3)",
        "Error in rowMeans(a, dims = 3) : 'dims'不对\n",
        "> ",
        "rowMeans(a, dims = 2)",
        "            [,1]      [,2]\n[1,] -0.02851641 0.3141348\n[2,] -0.54643922 0.2615556\n",
        "> ",
        "mapply(rnorm, 1:4)",
        "[[1]]\n[1] -1.360581\n\n[[2]]\n[1] 0.2040422 1.2536277\n\n[[3]]\n[1] -1.53340569  0.22411619  0.07969751\n\n[[4]]\n[1]  1.35834766  0.10918052 -0.87158915  0.06803428\n\n",
        "> ",
        "noise <- function(n, mean, sd) {",
        "+ ",
        "    + rnorm(n, mean, sd)",
        "+ ",
        "    + }",
        "Error: unexpected '}' in:\n\"    + rnorm(n, mean, sd)\n    + }\"\n",
        "> ",
        "noise <- function(n, mean, sd) {}",
        "> ",
        "noise <- function(n, mean, sd) {",
        "+ ",
        "rnorm(n, mean, sd)",
        "+ ",
        "}",
        "> ",
        "noise(2, 1, 2)",
        "[1] 3.564219 2.295408\n",
        "> ",
        "noise(1:2, 1:2, 2)",
        "[1] 0.4241301 0.3561020\n",
        "> ",
        "noise(1:2, 1, 2)",
        "[1]  1.4429849 -0.2759621\n",
        "> ",
        "noise(11:5, 1, 2)",
        "[1]  0.2979779  3.0253153 -1.3842953  1.1909348 -1.0576639 -0.6365466  3.8376093\n",
        "> ",
        "noise(11, 1, 2)",
        " [1]  5.4875052 -3.1570801  3.7868693 -1.4657172  3.6692440 -0.8198477  1.3423223  3.9782170  2.0091596 -0.1167727\n[11]  0.3442266\n",
        "> ",
        "noise(11:12, 1, 2)",
        "[1] 0.3367378 2.7477255\n",
        "> ",
        "noise(1:5, 1:6, 2)",
        "[1] 3.215749 3.575723 1.515775 4.927065 2.167025\n",
        "> ",
        "noise(5, 1:5, 2)",
        "[1] 1.462093 1.838049 2.967679 5.700427 5.466973\n",
        "> ",
        "noise(1:5, 1:5, 2)",
        "[1] -2.043411 -2.599577  3.281820  4.033843  7.501884\n",
        "> ",
        "mapply(noise, 1:5, 1:5, 2)",
        "[[1]]\n[1] -1.93689\n\n[[2]]\n[1]  6.33697899 -0.08312251\n\n[[3]]\n[1] 3.3475684 3.7908630 0.5221136\n\n[[4]]\n[1] 7.409089 5.605087 8.312066 7.607494\n\n[[5]]\n[1] 4.612056 3.484822 4.718407 6.597284 3.835442\n\n",
        "> ",
        "noise(1:5, 1:5, 0:5)",
        "[1] 1.000000 2.214046 2.207973 6.165041 2.332147\n",
        "> ",
        "noise(1:5, 1:5, 0:5)",
        "[1] 1.000000 1.866288 3.869071 5.569717 6.352559\n",
        "> ",
        "noise(1:5, 1:5, 0:5)",
        "[1]  1.000000  2.858692  5.365261  9.873022 10.902594\n",
        "> ",
        "noise(1:5, 1:5, 0:5)",
        "[1]  1.000000  2.534309  1.994213 -0.822685  9.095994\n",
        "> ",
        "noise(1:5, 2, 0:5)",
        "[1]  2.0000000  0.9619070  4.3562827 -0.6626909 -0.7824294\n",
        "> ",
        "x <- c(rnorm(10), runif(10), rnorm(10, 1))",
        "> ",
        "f <- gl(3, 10)",
        "> ",
        "f",
        " [1] 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3\nLevels: 1 2 3\n",
        "> ",
        "f <- gl(4, 10)",
        "> ",
        "f",
        " [1] 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4\nLevels: 1 2 3 4\n",
        "> ",
        "tapply(x, f, mean)",
        "Error in tapply(x, f, mean) : 参数的长度必需相同\n",
        "> ",
        "f <- gl(3, 10)",
        "> ",
        "tapply(x, f, mean)",
        "          1           2           3 \n-0.05980957  0.50265819  0.46495718 \n",
        "> ",
        "f <- gl(2, 10)",
        "> ",
        "tapply(x, f, mean)",
        "Error in tapply(x, f, mean) : 参数的长度必需相同\n",
        "> ",
        "f <- gl(3, 10)",
        "> ",
        "tapply(x, f, mean)",
        "          1           2           3 \n-0.05980957  0.50265819  0.46495718 \n",
        "> ",
        "lapply(x, mean)",
        "[[1]]\n[1] 1.36753\n\n[[2]]\n[1] 0.195209\n\n[[3]]\n[1] -0.8374288\n\n[[4]]\n[1] -0.9453173\n\n[[5]]\n[1] -0.599549\n\n[[6]]\n[1] -1.26469\n\n[[7]]\n[1] -1.560333\n\n[[8]]\n[1] 1.455472\n\n[[9]]\n[1] 1.125779\n\n[[10]]\n[1] 0.4652329\n\n[[11]]\n[1] 0.8636942\n\n[[12]]\n[1] 0.493727\n\n[[13]]\n[1] 0.5007454\n\n[[14]]\n[1] 0.9734664\n\n[[15]]\n[1] 0.09773732\n\n[[16]]\n[1] 0.07408769\n\n[[17]]\n[1] 0.1308025\n\n[[18]]\n[1] 0.7574824\n\n[[19]]\n[1] 0.7703889\n\n[[20]]\n[1] 0.3644501\n\n[[21]]\n[1] -1.602261\n\n[[22]]\n[1] 0.7846345\n\n[[23]]\n[1] 0.2475677\n\n[[24]]\n[1] 0.7987114",
        "\n\n[[25]]\n[1] 0.2359219\n\n[[26]]\n[1] 0.2352333\n\n[[27]]\n[1] 1.394576\n\n[[28]]\n[1] 0.5552472\n\n[[29]]\n[1] 1.035328\n\n[[30]]\n[1] 0.9646139\n\n",
        "> ",
        "x",
        " [1]  1.36752997  0.19520900 -0.83742884 -0.94531730 -0.59954897 -1.26469027 -1.56033276  1.45547197  1.12577854  0.46523294\n[11]  0.86369425  0.49372698  0.50074539  0.97346640  0.09773732  0.07408769  0.13080248  0.75748238  0.77038894  0.36445010\n[21] -1.60226140  0.78463450  0.24756765  0.79871144  0.23592192  0.23523330  1.39457576  0.55524718  1.03532757  0.96461385\n",
        "> ",
        "tapply(x, f, mean)",
        "          1           2           3 \n-0.05980957  0.50265819  0.46495718 \n",
        "> ",
        "f",
        " [1] 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3\nLevels: 1 2 3\n",
        "> ",
        "f <- gl(3, 9)",
        "> ",
        "tapply(x, f, mean)",
        "Error in tapply(x, f, mean) : 参数的长度必需相同\n",
        "> ",
        "f <- gl(3, 10)",
        "> ",
        "tapply(x, f, mean)",
        "          1           2           3 \n-0.05980957  0.50265819  0.46495718 \n",
        "> ",
        "tapply(x, f, range)",
        "$`1`\n[1] -1.560333  1.455472\n\n$`2`\n[1] 0.07408769 0.97346640\n\n$`3`\n[1] -1.602261  1.394576\n\n",
        "> ",
        "x <- c(rnorm(10), runif(10), rnorm(10, 1))",
        "> ",
        "f <- gl(3, 5)",
        "> ",
        "split(x, f)",
        "$`1`\n [1]  0.01937725  0.41831260 -0.06903448 -0.84882989 -1.38290570  0.06187798  0.42616534  0.72491128  0.20140856  0.20520683\n\n$`2`\n [1] -0.4222129  0.6261260 -1.2759222  0.7977322 -0.7230333  0.7751430 -0.5234885  1.5024043  0.6679650  1.9836686\n\n$`3`\n [1] 0.2044445 0.8380637 0.1502388 0.8400336 0.2047426 1.7767332 1.0187699 1.3259779 1.2997564 0.4275444\n\n",
        "> ",
        "f",
        " [1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3\nLevels: 1 2 3\n",
        "> ",
        "x",
        " [1]  0.01937725  0.41831260 -0.06903448 -0.84882989 -1.38290570 -0.42221293  0.62612602 -1.27592223  0.79773219 -0.72303331\n[11]  0.20444446  0.83806373  0.15023879  0.84003364  0.20474256  0.06187798  0.42616534  0.72491128  0.20140856  0.20520683\n[21]  0.77514298 -0.52348853  1.50240431  0.66796500  1.98366862  1.77673322  1.01876993  1.32597790  1.29975642  0.42754439\n",
        "> ",
        "f <- gl(3)",
        "Error in rep.int(k, n) : argument \"k\" is missing, with no default\n",
        "> ",
        "f <- gl(3, 1)",
        "> ",
        "f",
        "[1] 1 2 3\nLevels: 1 2 3\n",
        "> ",
        "split(x, f)",
        "$`1`\n [1]  0.01937725 -0.84882989  0.62612602 -0.72303331  0.15023879  0.06187798  0.20140856 -0.52348853  1.98366862  1.32597790\n\n$`2`\n [1]  0.4183126 -1.3829057 -1.2759222  0.2044445  0.8400336  0.4261653  0.2052068  1.5024043  1.7767332  1.2997564\n\n$`3`\n [1] -0.06903448 -0.42221293  0.79773219  0.83806373  0.20474256  0.72491128  0.77514298  0.66796500  1.01876993  0.42754439\n\n",
        "> ",
        "x <- rnorm(10)",
        "> ",
        "x",
        " [1]  1.0245178 -0.2951526 -1.8410890 -1.9687468 -1.2536136 -0.8153155 -0.9444074  0.1277505 -0.5580801  0.9476556\n",
        "> ",
        "f1 <- lg(2, 5)",
        "Error: could not find function \"lg\"\n",
        "> ",
        "f1 <- gl(2, 5)",
        "> ",
        "f1",
        " [1] 1 1 1 1 1 2 2 2 2 2\nLevels: 1 2\n",
        "> ",
        "f2 <- gl(5,2)",
        "> ",
        "f2",
        " [1] 1 1 2 2 3 3 4 4 5 5\nLevels: 1 2 3 4 5\n",
        "> ",
        "list(f1, f2)",
        "[[1]]\n [1] 1 1 1 1 1 2 2 2 2 2\nLevels: 1 2\n\n[[2]]\n [1] 1 1 2 2 3 3 4 4 5 5\nLevels: 1 2 3 4 5\n\n",
        "> ",
        "split(x, list(f1, f2\\))",
        "Error: unexpected input in \"split(x, list(f1, f2\\\"\n",
        "> ",
        "split(x, list(f1, f2))",
        "$`1.1`\n[1]  1.0245178 -0.2951526\n\n$`2.1`\nnumeric(0)\n\n$`1.2`\n[1] -1.841089 -1.968747\n\n$`2.2`\nnumeric(0)\n\n$`1.3`\n[1] -1.253614\n\n$`2.3`\n[1] -0.8153155\n\n$`1.4`\nnumeric(0)\n\n$`2.4`\n[1] -0.9444074  0.1277505\n\n$`1.5`\nnumeric(0)\n\n$`2.5`\n[1] -0.5580801  0.9476556\n\n",
        "> ",
        "str(split(x, list(f1, f2)))",
        "List of 10\n $ 1.1: num [1:2] 1.025 -0.295\n $ 2.1: num(0) \n $ 1.2: num [1:2] -1.84 -1.97\n $ 2.2: num(0) \n $ 1.3: num -1.25\n $ 2.3: num -0.815\n $ 1.4: num(0) \n $ 2.4: num [1:2] -0.944 0.128\n $ 1.5: num(0) \n $ 2.5: num [1:2] -0.558 0.948\n",
        "> ",
        "librarry(datasets)",
        "Error: could not find function \"librarry\"\n",
        "> ",
        "library(datasets)",
        "> ",
        "data(iris)",
        "> ",
        "iris",
        "    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n1            5.1         3.5          1.4         0.2     setosa\n2            4.9         3.0          1.4         0.2     setosa\n3            4.7         3.2          1.3         0.2     setosa\n4            4.6         3.1          1.5         0.2     setosa\n5            5.0         3.6          1.4         0.2     setosa\n6            5.4         3.9          1.7         0.4     setosa\n7            4.6         3.4          1.4         0.3     setosa",
        "\n8            5.0         3.4          1.5         0.2     setosa\n9            4.4         2.9          1.4         0.2     setosa\n10           4.9         3.1          1.5         0.1     setosa\n11           5.4         3.7          1.5         0.2     setosa\n12           4.8         3.4          1.6         0.2     setosa\n13           4.8         3.0          1.4         0.1     setosa\n14           4.3         3.0          1.1         0.1     setosa\n15           5.8         4.0          1.2         0.2     setosa",
        "\n16           5.7         4.4          1.5         0.4     setosa\n17           5.4         3.9          1.3         0.4     setosa\n18           5.1         3.5          1.4         0.3     setosa\n19           5.7         3.8          1.7         0.3     setosa\n20           5.1         3.8          1.5         0.3     setosa\n21           5.4         3.4          1.7         0.2     setosa\n22           5.1         3.7          1.5         0.4     setosa\n23           4.6         3.6          1.0         0.2     setosa",
        "\n24           5.1         3.3          1.7         0.5     setosa\n25           4.8         3.4          1.9         0.2     setosa\n26           5.0         3.0          1.6         0.2     setosa\n27           5.0         3.4          1.6         0.4     setosa\n28           5.2         3.5          1.5         0.2     setosa\n29           5.2         3.4          1.4         0.2     setosa\n30           4.7         3.2          1.6         0.2     setosa\n31           4.8         3.1          1.6         0.2     setosa",
        "\n32           5.4         3.4          1.5         0.4     setosa\n33           5.2         4.1          1.5         0.1     setosa\n34           5.5         4.2          1.4         0.2     setosa\n35           4.9         3.1          1.5         0.2     setosa\n36           5.0         3.2          1.2         0.2     setosa\n37           5.5         3.5          1.3         0.2     setosa\n38           4.9         3.6          1.4         0.1     setosa\n39           4.4         3.0          1.3         0.2     setosa",
        "\n40           5.1         3.4          1.5         0.2     setosa\n41           5.0         3.5          1.3         0.3     setosa\n42           4.5         2.3          1.3         0.3     setosa\n43           4.4         3.2          1.3         0.2     setosa\n44           5.0         3.5          1.6         0.6     setosa\n45           5.1         3.8          1.9         0.4     setosa\n46           4.8         3.0          1.4         0.3     setosa\n47           5.1         3.8          1.6         0.2     setosa",
        "\n48           4.6         3.2          1.4         0.2     setosa\n49           5.3         3.7          1.5         0.2     setosa\n50           5.0         3.3          1.4         0.2     setosa\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor",
        "\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor",
        "\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor",
        "\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor",
        "\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor",
        "\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor",
        "\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n101          6.3         3.3          6.0         2.5  virginica\n102          5.8         2.7          5.1         1.9  virginica\n103          7.1         3.0          5.9         2.1  virginica",
        "\n104          6.3         2.9          5.6         1.8  virginica\n105          6.5         3.0          5.8         2.2  virginica\n106          7.6         3.0          6.6         2.1  virginica\n107          4.9         2.5          4.5         1.7  virginica\n108          7.3         2.9          6.3         1.8  virginica\n109          6.7         2.5          5.8         1.8  virginica\n110          7.2         3.6          6.1         2.5  virginica\n111          6.5         3.2          5.1         2.0  virginica",
        "\n112          6.4         2.7          5.3         1.9  virginica\n113          6.8         3.0          5.5         2.1  virginica\n114          5.7         2.5          5.0         2.0  virginica\n115          5.8         2.8          5.1         2.4  virginica\n116          6.4         3.2          5.3         2.3  virginica\n117          6.5         3.0          5.5         1.8  virginica\n118          7.7         3.8          6.7         2.2  virginica\n119          7.7         2.6          6.9         2.3  virginica",
        "\n120          6.0         2.2          5.0         1.5  virginica\n121          6.9         3.2          5.7         2.3  virginica\n122          5.6         2.8          4.9         2.0  virginica\n123          7.7         2.8          6.7         2.0  virginica\n124          6.3         2.7          4.9         1.8  virginica\n125          6.7         3.3          5.7         2.1  virginica\n126          7.2         3.2          6.0         1.8  virginica\n127          6.2         2.8          4.8         1.8  virginica",
        "\n128          6.1         3.0          4.9         1.8  virginica\n129          6.4         2.8          5.6         2.1  virginica\n130          7.2         3.0          5.8         1.6  virginica\n131          7.4         2.8          6.1         1.9  virginica\n132          7.9         3.8          6.4         2.0  virginica\n133          6.4         2.8          5.6         2.2  virginica\n134          6.3         2.8          5.1         1.5  virginica\n135          6.1         2.6          5.6         1.4  virginica",
        "\n136          7.7         3.0          6.1         2.3  virginica\n137          6.3         3.4          5.6         2.4  virginica\n138          6.4         3.1          5.5         1.8  virginica\n139          6.0         3.0          4.8         1.8  virginica\n140          6.9         3.1          5.4         2.1  virginica\n141          6.7         3.1          5.6         2.4  virginica\n142          6.9         3.1          5.1         2.3  virginica\n143          5.8         2.7          5.1         1.9  virginica",
        "\n144          6.8         3.2          5.9         2.3  virginica\n145          6.7         3.3          5.7         2.5  virginica\n146          6.7         3.0          5.2         2.3  virginica\n147          6.3         2.5          5.0         1.9  virginica\n148          6.5         3.0          5.2         2.0  virginica\n149          6.2         3.4          5.4         2.3  virginica\n150          5.9         3.0          5.1         1.8  virginica\n",
        "> ",
        "?iris",
        "> ",
        "s <- split(iris, iris$)Species",
        "Error: unexpected ')' in \"s <- split(iris, iris$)\"\n",
        "> ",
        "s <- split(iris, iris$Species)",
        "> ",
        "sapply(s, function(x) colMeans([, \"Sepal.Length\"], na.rm = TRUE)",
        "Error: unexpected '[' in \"sapply(s, function(x) colMeans([\"\n",
        "> ",
        "sapply(s, function(x) colMeans([, \"Sepal.Length\"]), na.rm = TRUE)",
        "Error: unexpected '[' in \"sapply(s, function(x) colMeans([\"\n",
        "> ",
        "sapply(s, function(x) colMeans(x[, \"Sepal.Length\"]), na.rm = TRUE)",
        "Error in FUN(X[[1L]], ...) : unused argument (na.rm = TRUE)\n",
        "> ",
        "sapply(s, function(x) colMeans(x[, \"Sepal.Length\"], na.rm = TRUE))",
        "Error in colMeans(x[, \"Sepal.Length\"], na.rm = TRUE) : \n  'x'必需是阵列，而且至少得有两个维度\n",
        "> ",
        "s",
        "$setosa\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1           5.1         3.5          1.4         0.2  setosa\n2           4.9         3.0          1.4         0.2  setosa\n3           4.7         3.2          1.3         0.2  setosa\n4           4.6         3.1          1.5         0.2  setosa\n5           5.0         3.6          1.4         0.2  setosa\n6           5.4         3.9          1.7         0.4  setosa\n7           4.6         3.4          1.4         0.3  setosa\n8           5.0         3.4",
        "          1.5         0.2  setosa\n9           4.4         2.9          1.4         0.2  setosa\n10          4.9         3.1          1.5         0.1  setosa\n11          5.4         3.7          1.5         0.2  setosa\n12          4.8         3.4          1.6         0.2  setosa\n13          4.8         3.0          1.4         0.1  setosa\n14          4.3         3.0          1.1         0.1  setosa\n15          5.8         4.0          1.2         0.2  setosa\n16          5.7         4.4          1.5         0.4",
        "  setosa\n17          5.4         3.9          1.3         0.4  setosa\n18          5.1         3.5          1.4         0.3  setosa\n19          5.7         3.8          1.7         0.3  setosa\n20          5.1         3.8          1.5         0.3  setosa\n21          5.4         3.4          1.7         0.2  setosa\n22          5.1         3.7          1.5         0.4  setosa\n23          4.6         3.6          1.0         0.2  setosa\n24          5.1         3.3          1.7         0.5  setosa\n25          4.8",
        "         3.4          1.9         0.2  setosa\n26          5.0         3.0          1.6         0.2  setosa\n27          5.0         3.4          1.6         0.4  setosa\n28          5.2         3.5          1.5         0.2  setosa\n29          5.2         3.4          1.4         0.2  setosa\n30          4.7         3.2          1.6         0.2  setosa\n31          4.8         3.1          1.6         0.2  setosa\n32          5.4         3.4          1.5         0.4  setosa\n33          5.2         4.1          1.5",
        "         0.1  setosa\n34          5.5         4.2          1.4         0.2  setosa\n35          4.9         3.1          1.5         0.2  setosa\n36          5.0         3.2          1.2         0.2  setosa\n37          5.5         3.5          1.3         0.2  setosa\n38          4.9         3.6          1.4         0.1  setosa\n39          4.4         3.0          1.3         0.2  setosa\n40          5.1         3.4          1.5         0.2  setosa\n41          5.0         3.5          1.3         0.3  setosa\n42          4.5",
        "         2.3          1.3         0.3  setosa\n43          4.4         3.2          1.3         0.2  setosa\n44          5.0         3.5          1.6         0.6  setosa\n45          5.1         3.8          1.9         0.4  setosa\n46          4.8         3.0          1.4         0.3  setosa\n47          5.1         3.8          1.6         0.2  setosa\n48          4.6         3.2          1.4         0.2  setosa\n49          5.3         3.7          1.5         0.2  setosa\n50          5.0         3.3          1.4",
        "         0.2  setosa\n\n$versicolor\n    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\n51           7.0         3.2          4.7         1.4 versicolor\n52           6.4         3.2          4.5         1.5 versicolor\n53           6.9         3.1          4.9         1.5 versicolor\n54           5.5         2.3          4.0         1.3 versicolor\n55           6.5         2.8          4.6         1.5 versicolor\n56           5.7         2.8          4.5         1.3 versicolor\n57           6.3         3.3",
        "          4.7         1.6 versicolor\n58           4.9         2.4          3.3         1.0 versicolor\n59           6.6         2.9          4.6         1.3 versicolor\n60           5.2         2.7          3.9         1.4 versicolor\n61           5.0         2.0          3.5         1.0 versicolor\n62           5.9         3.0          4.2         1.5 versicolor\n63           6.0         2.2          4.0         1.0 versicolor\n64           6.1         2.9          4.7         1.4 versicolor\n65           5.6         2.9",
        "          3.6         1.3 versicolor\n66           6.7         3.1          4.4         1.4 versicolor\n67           5.6         3.0          4.5         1.5 versicolor\n68           5.8         2.7          4.1         1.0 versicolor\n69           6.2         2.2          4.5         1.5 versicolor\n70           5.6         2.5          3.9         1.1 versicolor\n71           5.9         3.2          4.8         1.8 versicolor\n72           6.1         2.8          4.0         1.3 versicolor\n73           6.3         2.5",
        "          4.9         1.5 versicolor\n74           6.1         2.8          4.7         1.2 versicolor\n75           6.4         2.9          4.3         1.3 versicolor\n76           6.6         3.0          4.4         1.4 versicolor\n77           6.8         2.8          4.8         1.4 versicolor\n78           6.7         3.0          5.0         1.7 versicolor\n79           6.0         2.9          4.5         1.5 versicolor\n80           5.7         2.6          3.5         1.0 versicolor\n81           5.5         2.4",
        "          3.8         1.1 versicolor\n82           5.5         2.4          3.7         1.0 versicolor\n83           5.8         2.7          3.9         1.2 versicolor\n84           6.0         2.7          5.1         1.6 versicolor\n85           5.4         3.0          4.5         1.5 versicolor\n86           6.0         3.4          4.5         1.6 versicolor\n87           6.7         3.1          4.7         1.5 versicolor\n88           6.3         2.3          4.4         1.3 versicolor\n89           5.6         3.0",
        "          4.1         1.3 versicolor\n90           5.5         2.5          4.0         1.3 versicolor\n91           5.5         2.6          4.4         1.2 versicolor\n92           6.1         3.0          4.6         1.4 versicolor\n93           5.8         2.6          4.0         1.2 versicolor\n94           5.0         2.3          3.3         1.0 versicolor\n95           5.6         2.7          4.2         1.3 versicolor\n96           5.7         3.0          4.2         1.2 versicolor\n97           5.7         2.9",
        "          4.2         1.3 versicolor\n98           6.2         2.9          4.3         1.3 versicolor\n99           5.1         2.5          3.0         1.1 versicolor\n100          5.7         2.8          4.1         1.3 versicolor\n\n$virginica\n    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n101          6.3         3.3          6.0         2.5 virginica\n102          5.8         2.7          5.1         1.9 virginica\n103          7.1         3.0          5.9         2.1 virginica\n104          6.3",
        "         2.9          5.6         1.8 virginica\n105          6.5         3.0          5.8         2.2 virginica\n106          7.6         3.0          6.6         2.1 virginica\n107          4.9         2.5          4.5         1.7 virginica\n108          7.3         2.9          6.3         1.8 virginica\n109          6.7         2.5          5.8         1.8 virginica\n110          7.2         3.6          6.1         2.5 virginica\n111          6.5         3.2          5.1         2.0 virginica\n112          6.4",
        "         2.7          5.3         1.9 virginica\n113          6.8         3.0          5.5         2.1 virginica\n114          5.7         2.5          5.0         2.0 virginica\n115          5.8         2.8          5.1         2.4 virginica\n116          6.4         3.2          5.3         2.3 virginica\n117          6.5         3.0          5.5         1.8 virginica\n118          7.7         3.8          6.7         2.2 virginica\n119          7.7         2.6          6.9         2.3 virginica\n120          6.0",
        "         2.2          5.0         1.5 virginica\n121          6.9         3.2          5.7         2.3 virginica\n122          5.6         2.8          4.9         2.0 virginica\n123          7.7         2.8          6.7         2.0 virginica\n124          6.3         2.7          4.9         1.8 virginica\n125          6.7         3.3          5.7         2.1 virginica\n126          7.2         3.2          6.0         1.8 virginica\n127          6.2         2.8          4.8         1.8 virginica\n128          6.1",
        "         3.0          4.9         1.8 virginica\n129          6.4         2.8          5.6         2.1 virginica\n130          7.2         3.0          5.8         1.6 virginica\n131          7.4         2.8          6.1         1.9 virginica\n132          7.9         3.8          6.4         2.0 virginica\n133          6.4         2.8          5.6         2.2 virginica\n134          6.3         2.8          5.1         1.5 virginica\n135          6.1         2.6          5.6         1.4 virginica\n136          7.7",
        "         3.0          6.1         2.3 virginica\n137          6.3         3.4          5.6         2.4 virginica\n138          6.4         3.1          5.5         1.8 virginica\n139          6.0         3.0          4.8         1.8 virginica\n140          6.9         3.1          5.4         2.1 virginica\n141          6.7         3.1          5.6         2.4 virginica\n142          6.9         3.1          5.1         2.3 virginica\n143          5.8         2.7          5.1         1.9 virginica\n144          6.8",
        "         3.2          5.9         2.3 virginica\n145          6.7         3.3          5.7         2.5 virginica\n146          6.7         3.0          5.2         2.3 virginica\n147          6.3         2.5          5.0         1.9 virginica\n148          6.5         3.0          5.2         2.0 virginica\n149          6.2         3.4          5.4         2.3 virginica\n150          5.9         3.0          5.1         1.8 virginica\n\n",
        "> ",
        "sapply(s, function(x) colMeans(x[, Sepal.Length], na.rm = TRUE))",
        "Error in `[.data.frame`(x, , Sepal.Length) : \n  object 'Sepal.Length' not found\n",
        "> ",
        "sapply(s, function(x) colMeans(x[, \"Sepal.Length\"], na.rm = TRUE))",
        "Error in colMeans(x[, \"Sepal.Length\"], na.rm = TRUE) : \n  'x'必需是阵列，而且至少得有两个维度\n",
        "> ",
        "sapply(s, function(x) colMeans(x[, c(\"Sepal.Length\", \"Petal.Width\")], na.rm = TRUE))",
        "             setosa versicolor virginica\nSepal.Length  5.006      5.936     6.588\nPetal.Width   0.246      1.326     2.026\n",
        "> ",
        "library(datasets)",
        "> ",
        "data(mtcars)",
        "> ",
        "?mtcars",
        "> ",
        "mtcars",
        "                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 360         ",
        " 14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC         15.2   8",
        " 275.8 180 3.07 3.780 18.00  0  0    3    3\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona       21.5   4 120.1  97",
        " 3.70 2.465 20.01  1  0    3    1\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa        30.4   4  95.1 113 3.77 1.513",
        " 16.90  1  1    5    2\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n",
        "> ",
        "tapply(mtcars$cyl, mtcars$mpg, mean)",
        "10.4 13.3 14.3 14.7   15 15.2 15.5 15.8 16.4 17.3 17.8 18.1 18.7 19.2 19.7   21 21.4 21.5 22.8 24.4   26 27.3 30.4 32.4 \n   8    8    8    8    8    8    8    8    8    8    6    6    8    7    6    6    5    4    4    4    4    4    4    4 \n33.9 \n   4 \n",
        "> ",
        "sapply(mtcars, cyl, mean)",
        "Error in match.fun(FUN) : object 'cyl' not found\n",
        "> ",
        "with(mtcars, tapply(mpg, cyl, mean))",
        "       4        6        8 \n26.66364 19.74286 15.10000 \n",
        "> ",
        "debug(ls)",
        "> ",
        "ls()",
        "debugging in: ls()\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n",
        "            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n",
        "}\n",
        "Browse[2]> ",
        "q",
        "function (save = \"default\", status = 0, runLast = TRUE) \n.Internal(quit(save, status, runLast))\n<bytecode: 0x000000001122e078>\n<environment: namespace:base>\n",
        "Browse[2]> ",
        "q()",
        "Warning message:\n",
        "In q() : cannot quit from browser\n",
        "Browse[2]> ",
        "Q",
        "debugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n",
        "        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n",
        "        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "Q",
        "debugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n",
        "        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n",
        "        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "Q",
        "debugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n",
        "        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n",
        "        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "Q",
        "debugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n",
        "        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n",
        "        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "Q",
        "debugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n",
        "        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n",
        "        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "c",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "c",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "c",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "c",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "c",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "c",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "c",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "c",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "c",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(name)) {\n    pos <- tryCatch(name, error = function(e) e)\n    if (inherits(pos, \"error\")) {\n        name <- substitute(name)\n        if (!is.character(name)) \n            name <- deparse(name)\n        warning(gettextf(\"%s converted to character string\", \n            sQuote(name)), domain = NA)\n        pos <- name\n    }\n}\n",
        "Browse[2]> ",
        "n",
        "debug: pos <- tryCatch(name, error = function(e) e)\n",
        "Browse[2]> ",
        "n",
        "debug: if (inherits(pos, \"error\")) {\n    name <- substitute(name)\n    if (!is.character(name)) \n        name <- deparse(name)\n    warning(gettextf(\"%s converted to character string\", sQuote(name)), \n        domain = NA)\n    pos <- name\n}\n",
        "Browse[2]> ",
        "n",
        "debug: all.names <- .Internal(ls(envir, all.names))\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(pattern)) {\n    if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && ll != \n        length(grep(\"]\", pattern, fixed = TRUE))) {\n        if (pattern == \"[\") {\n            pattern <- \"\\\\[\"\n            warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n        }\n        else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n            pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n            warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n        }\n    }\n    grep(pattern, all.names, value = TRUE)\n",
        "} else all.names\n",
        "Browse[2]> ",
        "n",
        "debug: all.names\n",
        "Browse[2]> ",
        "n",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(name)) {\n    pos <- tryCatch(name, error = function(e) e)\n    if (inherits(pos, \"error\")) {\n        name <- substitute(name)\n        if (!is.character(name)) \n            name <- deparse(name)\n        warning(gettextf(\"%s converted to character string\", \n            sQuote(name)), domain = NA)\n        pos <- name\n    }\n}\n",
        "Browse[2]> ",
        "n",
        "debug: pos <- tryCatch(name, error = function(e) e)\n",
        "Browse[2]> ",
        "n",
        "debug: if (inherits(pos, \"error\")) {\n    name <- substitute(name)\n    if (!is.character(name)) \n        name <- deparse(name)\n    warning(gettextf(\"%s converted to character string\", sQuote(name)), \n        domain = NA)\n    pos <- name\n}\n",
        "Browse[2]> ",
        "n",
        "debug: all.names <- .Internal(ls(envir, all.names))\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(pattern)) {\n    if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && ll != \n        length(grep(\"]\", pattern, fixed = TRUE))) {\n        if (pattern == \"[\") {\n            pattern <- \"\\\\[\"\n            warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n        }\n        else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n            pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n            warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n        }\n    }\n    grep(pattern, all.names, value = TRUE)\n",
        "} else all.names\n",
        "Browse[2]> ",
        "n",
        "debug: all.names\n",
        "Browse[2]> ",
        "n",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(name)) {\n    pos <- tryCatch(name, error = function(e) e)\n    if (inherits(pos, \"error\")) {\n        name <- substitute(name)\n        if (!is.character(name)) \n            name <- deparse(name)\n        warning(gettextf(\"%s converted to character string\", \n            sQuote(name)), domain = NA)\n        pos <- name\n    }\n}\n",
        "Browse[2]> ",
        "n",
        "debug: pos <- tryCatch(name, error = function(e) e)\n",
        "Browse[2]> ",
        "n",
        "debug: if (inherits(pos, \"error\")) {\n    name <- substitute(name)\n    if (!is.character(name)) \n        name <- deparse(name)\n    warning(gettextf(\"%s converted to character string\", sQuote(name)), \n        domain = NA)\n    pos <- name\n}\n",
        "Browse[2]> ",
        "n",
        "debug: all.names <- .Internal(ls(envir, all.names))\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(pattern)) {\n    if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && ll != \n        length(grep(\"]\", pattern, fixed = TRUE))) {\n        if (pattern == \"[\") {\n            pattern <- \"\\\\[\"\n            warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n        }\n        else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n            pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n            warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n        }\n    }\n    grep(pattern, all.names, value = TRUE)\n",
        "} else all.names\n",
        "Browse[2]> ",
        "n",
        "debug: all.names\n",
        "Browse[2]> ",
        "n",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(name)) {\n    pos <- tryCatch(name, error = function(e) e)\n    if (inherits(pos, \"error\")) {\n        name <- substitute(name)\n        if (!is.character(name)) \n            name <- deparse(name)\n        warning(gettextf(\"%s converted to character string\", \n            sQuote(name)), domain = NA)\n        pos <- name\n    }\n}\n",
        "Browse[2]> ",
        "n",
        "debug: pos <- tryCatch(name, error = function(e) e)\n",
        "Browse[2]> ",
        "n",
        "debug: if (inherits(pos, \"error\")) {\n    name <- substitute(name)\n    if (!is.character(name)) \n        name <- deparse(name)\n    warning(gettextf(\"%s converted to character string\", sQuote(name)), \n        domain = NA)\n    pos <- name\n}\n",
        "Browse[2]> ",
        "n",
        "debug: all.names <- .Internal(ls(envir, all.names))\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(pattern)) {\n    if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && ll != \n        length(grep(\"]\", pattern, fixed = TRUE))) {\n        if (pattern == \"[\") {\n            pattern <- \"\\\\[\"\n            warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n        }\n        else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n            pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n            warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n        }\n    }\n    grep(pattern, all.names, value = TRUE)\n",
        "} else all.names\n",
        "Browse[2]> ",
        "n",
        "debug: all.names\n",
        "Browse[2]> ",
        "n",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(name)) {\n    pos <- tryCatch(name, error = function(e) e)\n    if (inherits(pos, \"error\")) {\n        name <- substitute(name)\n        if (!is.character(name)) \n            name <- deparse(name)\n        warning(gettextf(\"%s converted to character string\", \n            sQuote(name)), domain = NA)\n        pos <- name\n    }\n}\n",
        "Browse[2]> ",
        "n",
        "debug: pos <- tryCatch(name, error = function(e) e)\n",
        "Browse[2]> ",
        "n",
        "debug: if (inherits(pos, \"error\")) {\n    name <- substitute(name)\n    if (!is.character(name)) \n        name <- deparse(name)\n    warning(gettextf(\"%s converted to character string\", sQuote(name)), \n        domain = NA)\n    pos <- name\n}\n",
        "Browse[2]> ",
        "n",
        "debug: all.names <- .Internal(ls(envir, all.names))\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(pattern)) {\n    if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && ll != \n        length(grep(\"]\", pattern, fixed = TRUE))) {\n        if (pattern == \"[\") {\n            pattern <- \"\\\\[\"\n            warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n        }\n        else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n            pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n            warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n        }\n    }\n    grep(pattern, all.names, value = TRUE)\n",
        "} else all.names\n",
        "Browse[2]> ",
        "n",
        "debug: all.names\n",
        "Browse[2]> ",
        "n",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(name)) {\n    pos <- tryCatch(name, error = function(e) e)\n    if (inherits(pos, \"error\")) {\n        name <- substitute(name)\n        if (!is.character(name)) \n            name <- deparse(name)\n        warning(gettextf(\"%s converted to character string\", \n            sQuote(name)), domain = NA)\n        pos <- name\n    }\n}\n",
        "Browse[2]> ",
        "n",
        "debug: pos <- tryCatch(name, error = function(e) e)\n",
        "Browse[2]> ",
        "n",
        "debug: if (inherits(pos, \"error\")) {\n    name <- substitute(name)\n    if (!is.character(name)) \n        name <- deparse(name)\n    warning(gettextf(\"%s converted to character string\", sQuote(name)), \n        domain = NA)\n    pos <- name\n}\n",
        "Browse[2]> ",
        "n",
        "debug: all.names <- .Internal(ls(envir, all.names))\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(pattern)) {\n    if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && ll != \n        length(grep(\"]\", pattern, fixed = TRUE))) {\n        if (pattern == \"[\") {\n            pattern <- \"\\\\[\"\n            warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n        }\n        else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n            pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n            warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n        }\n    }\n    grep(pattern, all.names, value = TRUE)\n",
        "} else all.names\n",
        "Browse[2]> ",
        "n",
        "debug: all.names\n",
        "Browse[2]> ",
        "n",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(name)) {\n    pos <- tryCatch(name, error = function(e) e)\n    if (inherits(pos, \"error\")) {\n        name <- substitute(name)\n        if (!is.character(name)) \n            name <- deparse(name)\n        warning(gettextf(\"%s converted to character string\", \n            sQuote(name)), domain = NA)\n        pos <- name\n    }\n}\n",
        "Browse[2]> ",
        "n",
        "debug: pos <- tryCatch(name, error = function(e) e)\n",
        "Browse[2]> ",
        "n",
        "debug: if (inherits(pos, \"error\")) {\n    name <- substitute(name)\n    if (!is.character(name)) \n        name <- deparse(name)\n    warning(gettextf(\"%s converted to character string\", sQuote(name)), \n        domain = NA)\n    pos <- name\n}\n",
        "Browse[2]> ",
        "n",
        "debug: all.names <- .Internal(ls(envir, all.names))\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(pattern)) {\n    if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && ll != \n        length(grep(\"]\", pattern, fixed = TRUE))) {\n        if (pattern == \"[\") {\n            pattern <- \"\\\\[\"\n            warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n        }\n        else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n            pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n            warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n        }\n    }\n    grep(pattern, all.names, value = TRUE)\n",
        "} else all.names\n",
        "Browse[2]> ",
        "n",
        "debug: all.names\n",
        "Browse[2]> ",
        "n",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(name)) {\n    pos <- tryCatch(name, error = function(e) e)\n    if (inherits(pos, \"error\")) {\n        name <- substitute(name)\n        if (!is.character(name)) \n            name <- deparse(name)\n        warning(gettextf(\"%s converted to character string\", \n            sQuote(name)), domain = NA)\n        pos <- name\n    }\n}\n",
        "Browse[2]> ",
        "n",
        "debug: pos <- tryCatch(name, error = function(e) e)\n",
        "Browse[2]> ",
        "n",
        "debug: if (inherits(pos, \"error\")) {\n    name <- substitute(name)\n    if (!is.character(name)) \n        name <- deparse(name)\n    warning(gettextf(\"%s converted to character string\", sQuote(name)), \n        domain = NA)\n    pos <- name\n}\n",
        "Browse[2]> ",
        "n",
        "debug: all.names <- .Internal(ls(envir, all.names))\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(pattern)) {\n    if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && ll != \n        length(grep(\"]\", pattern, fixed = TRUE))) {\n        if (pattern == \"[\") {\n            pattern <- \"\\\\[\"\n            warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n        }\n        else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n            pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n            warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n        }\n    }\n    grep(pattern, all.names, value = TRUE)\n",
        "} else all.names\n",
        "Browse[2]> ",
        "n",
        "debug: all.names\n",
        "Browse[2]> ",
        "n",
        "exiting from: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n",
        "        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n",
        "            }\n        }\n        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(name)) {\n    pos <- tryCatch(name, error = function(e) e)\n    if (inherits(pos, \"error\")) {\n        name <- substitute(name)\n        if (!is.character(name)) \n            name <- deparse(name)\n        warning(gettextf(\"%s converted to character string\", \n            sQuote(name)), domain = NA)\n        pos <- name\n    }\n}\n",
        "Browse[2]> ",
        "n",
        "debug: pos <- tryCatch(name, error = function(e) e)\n",
        "Browse[2]> ",
        "n",
        "debug: if (inherits(pos, \"error\")) {\n    name <- substitute(name)\n    if (!is.character(name)) \n        name <- deparse(name)\n    warning(gettextf(\"%s converted to character string\", sQuote(name)), \n        domain = NA)\n    pos <- name\n}\n",
        "Browse[2]> ",
        "n",
        "debug: all.names <- .Internal(ls(envir, all.names))\n",
        "Browse[2]> ",
        "n",
        "debug: if (!missing(pattern)) {\n    if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && ll != \n        length(grep(\"]\", pattern, fixed = TRUE))) {\n        if (pattern == \"[\") {\n            pattern <- \"\\\\[\"\n            warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n        }\n        else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n            pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n            warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n        }\n    }\n    grep(pattern, all.names, value = TRUE)\n",
        "} else all.names\n",
        "Browse[2]> ",
        "Q",
        "debugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n",
        "        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n",
        "        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "Q",
        "debugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n",
        "        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n",
        "        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "Q",
        "debugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n",
        "        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n",
        "        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "Q",
        "debugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n",
        "        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n",
        "        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "Q",
        "debugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n",
        "        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n",
        "        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Browse[2]> ",
        "Q",
        "debugging in: ls(.Internal(getNamespaceRegistry()), all.names = TRUE)\ndebug: {\n    if (!missing(name)) {\n        pos <- tryCatch(name, error = function(e) e)\n        if (inherits(pos, \"error\")) {\n            name <- substitute(name)\n            if (!is.character(name)) \n                name <- deparse(name)\n            warning(gettextf(\"%s converted to character string\", \n                sQuote(name)), domain = NA)\n            pos <- name\n        }\n    }\n    all.names <- .Internal(ls(envir, all.names))\n    if (!missing(pattern)) {\n",
        "        if ((ll <- length(grep(\"[\", pattern, fixed = TRUE))) && \n            ll != length(grep(\"]\", pattern, fixed = TRUE))) {\n            if (pattern == \"[\") {\n                pattern <- \"\\\\[\"\n                warning(\"replaced regular expression pattern '[' by  '\\\\\\\\['\")\n            }\n            else if (length(grep(\"[^\\\\\\\\]\\\\[<-\", pattern))) {\n                pattern <- sub(\"\\\\[<-\", \"\\\\\\\\\\\\[<-\", pattern)\n                warning(\"replaced '[<-' by '\\\\\\\\[<-' in regular expression pattern\")\n            }\n        }\n",
        "        grep(pattern, all.names, value = TRUE)\n    }\n    else all.names\n}\n",
        "Error: unable to quit when browser is active\n",
        "Error: unable to quit when browser is active\n",
        "\nRestarting R session...\n\n"
    ],
    "type" : [
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        3,
        3,
        2
    ]
}