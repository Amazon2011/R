x <- numeric(0)
y <- numeric(0)
cor(x, y)
y = c(0, 10, NA)
na.omit(y)
mean(na.omit(y))
length(na.omit(y))
head(1:10)
source("corr.R")
corr("directory", 400)
corr("specdata", 400)
source("corr.R")
corr("specdata", 400)
cr <- corr("specdata", 400)
head(cr)
source("corr.R")
source("corr.R")
cr <- corr("specdata", 400)
head(cr)
source("corr.R")
head(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata")
summary(cr)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("corr.R")
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source("corr.R")
cr <- corr("specdata", 150)
summary(cr)
cr <- corr("specdata", 400)
summary(cr)
source("corr.R")
summary(cr)
ls()
submit()
source("corr.R")
cr <- corr("specdata", 150)
cr <- corr("specdata", 5000)
head(cr)
length(cr)
summary(cr)
cr <- corr("specdata")
length(cr)
summary(cr)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
complete("directory")
complete("specdata")
completedatanum <- complete("specdata")
completedatanum[,completedatanum > 100
]
completedatanum[,completedatanum[, 2] > 100]
completedatanumcompletedatanum[, 2] > 100]
completedatanum[completedatanum[, 2] > 100]
completedatanum[completedatanum[1, 2] > 100]
completedatanum
completedatanum[,2]
completedatanum[1:10,2]
completedatanum[completedatanum[,2] > 100,2]
completedatanum[completedatanum[,2] > 100]
completedatanum[,2] > 100
source("corr.R")
source("corr.R")
cr <- corr("specdata", 150)
cr <- corr("specdata")
length(cr)
cr <- corr("specdata")
source("corr.R")
cr <- corr("specdata")
length(cr)
complete("specdata")
com <- complete("specdata")
com
com[com[,2]>0,]
nrow(com[com[,2]>0,])
source("corr.R")
corr("specdata")
corr("specdata", 150)
corr("specdata", 1)
source("corr.R")
corr("specdata", 1)
source("corr.R")
corr("specdata", 0)
source("corr.R")
corr("specdata")
cor <- corr("specdata")
head(cor)
summary(cor)
cor <- corr("specdata", 150)
head(cor)
summary(cor)
submit()
10
submit()
submit()
source("corr.R")
submit()
submit()
submit()
load("makevector.R")
load("makevector.R")
load("makevector.R")
load("makevector.R")
load("makevector.R")
source("makevector.R")
source("makevector.R")
source("makevector.R")
x = makeVector(1:5)
load("makevector.R")
source("makevector.R")
x = makeVector(1:5)
cachemean(x)
source("ProgrammingAssignment2/makevector.R")
source("ProgrammingAssignment2/cachematrix.R")
source("ProgrammingAssignment2\cachematrix.R")
source("ProgrammingAssignment2/cachematrix.R")
source('D:/Study/ProgrammingAssignment2/cachematrix.R')
help(inverse)
source('D:/Study/ProgrammingAssignment2/cachematrix.R')
x = array(1:9,dim=(c(3,3)))
x
x = array(1:10,dim=(c(2,5)))
solve(x)
x = array(1:9,dim=(c(3,3)))
cacheMatrix <- makeCacheMatrix(x)
cacheSolve(cacheMatrix)
solve(x)
x = array(-1:7,dim=(c(3,3)))
cacheMatrix <- makeCacheMatrix(x)
cacheSolve(cacheMatrix)
x = array(c(1,1,1,4,2,1,9,3,1),dim=(c(3,3)))
cacheMatrix <- makeCacheMatrix(x)
cacheSolve(cacheMatrix)
cacheMatrix$getinversematrix()
source('D:/Study/ProgrammingAssignment2/cachematrix.R')
cacheMatrix <- makeCacheMatrix(x)
cacheSolve(cacheMatrix)
ls()
tapply(mtcars$mpg, mtcars$cyl, mean)
mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
install.packages("RDieHarder")
install.packages("RDieHarder")
source("best.R")
best("CA", "heart attack")
source("rprog-scripts-submitscript3.R")
submit()
2
submit()
submit()
source("rankhospital.R")
rankhospital("CA", "11")
a <- function() {}
a <- function() {
if (TRUE) {
return 1}}
source("rankhospital.R")
rankhospital("CA", "11")
rankhospital("CA", "heart attack")
x <- 5:1
x
ave(x, FUN = rank)
ave(-x, FUN = rank)
ave(x, FUN = rank)
source("rankhospital.R")
rankhospital("CA", "heart attack")
source("rankhospital.R")
rankhospital("CA", "heart attack")
source("rankhospital.R")
rankhospital("CA", "heart attack")
x <- c(2, 1, 3, 4, 6, 8)
rank(x)
a <- c("a", "b", "c", "d")
b <- c(2, 1, 2, 4)
x <- cbind(a, b)
x
x$b <- sapply(x$b, as.numeric)
x[, 2] <- sapply(x[, 2], as.numeric)
x
x[,2]
as.numeric(x[, 2])
sapply(x[, 2], as.numeric)
sapply(x[,2], as.numeric)
x[,2] <- sapply(x[,2], as.numeric)
x
x[1, 2] <- as.numeric(x[1, 2])
x
x[order(x[,2]),]
x[order(-x[,2]),]
source("rankhospital.R")
rankhospital("CA", "heart attack")
source("rankhospital.R")
rankhospital("CA", "heart attack")
x <- c("1", "2")
sapply(x, as.numeric)
lapply(x, as.numeric)
x <- sapply(x, as.numeric)
x
x <- cbind(c("a", "b", "c", "d"), c(2, 1, 2, 4))
x
x[, 2] <- sapply(x[, 2], as.numeric)
x
x[, 3] <- sapply(x[, 2], as.numeric)
x
x[, 1] <- sapply(x[, 2], as.numeric)
x
as.numeric(x)
source("rankhospital.R")
rankhospital("CA", "heart attack")
source("rankhospital.R")
rankhospital("CA", "heart attack")
rankhospital("CA", "heart attack")
source("rankhospital.R")
rankhospital("CA", "heart attack")
is.interger(1)
is.integer(1)
1 == as.integer(1)
1 == as.integer(1.1)
as.integer(1.1)
as.integer("1x")
1 == as.integer("1x")
1 == NA
source("rankhospital.R")
rankhospital("CA", "heart attack")
source("rankhospital.R")
rankhospital("CA", "heart attack")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart failure", “worst”)
rankhospital("MD", "heart failure", "worst")
source("rankhospital.R")
rankhospital("MD", "heart failure", "worst")
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", 5000)
is.numeric("1")
is.numeric(1)
is.numeric(1.1)
source("rankhospital.R")
rankhospital("MD", "heart attack", 5000)
rankhospital("MD", "heart attack", 1.1)
rankhospital("MD", "heart attack", "ss")
rankhospital("MD", "heart attack", 100)
rankhospital("MD", "heart attack", 10)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
submit()
submit()
submit()
submit()
X <- C(1,1)
X <- C(1, 1)
X <- c(1, 1)
unique(x)
unique(X)
order(x)
x
sort(x)
x <- 1:10
sort(x)
sort(x, decreasing = T)
source(rankall.R)
source("rankall.R")
rankall("heart attack")
source("rankhospital.R")
rankhospital("MD", "heart attack", 10)
source("rankhospital.R")
rankhospital("MD", "heart attack", 10)
rankhospital("TX", "heart attack", 4)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
data.frame()
data.frame(headers = c(1, 2))
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
rankall("heart attack")
View(result)
View(result)
View(wantedData)
View(wantedData)
View(result)
View(result)
source("rankall.R")
rankall("heart attack")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
result <- data.frame()
colnames(result) <- c("hospital", "state")
result <- data.frame()
result <- data.frame()
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
warnings()
source("rankall.R")
warnings()
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
warnings()
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
rankall("heart attack")
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
hospital
submit
submit()
9
submit()
submit()
ls()
library(swirl)
rm(list=ls())
install_course_zip("D:/Study/R/swirl_courses-master.zip", multi=TRUE, which_course="R Programming")
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 5)
c(z, 5, z)
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0,10)
c(1, 2, 3, 4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
play
play()
nxt()
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
a
info()
getwd()
dir.create("testdir")
setwd("testdir")
getwd()
file.create("mytest.R")
ls()
list.files()
exists("mytest.R")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
dir.create("testdir2/testdir3")
dir.create("testdir2/testdir3", recursive = TRUE)
ls()
unlink("testdir2", recursive = T)
unlink("testdir2", recursive = TRUE)
setwd("D:/Study/R")
info()
setwd(old.dir)
unlink("testdir", recursive = T)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?:
?':'
seq(1,20)
seq(0, 10, 0.5)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5, 55, -10. 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Yongtao Chen")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_ma)
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x >
| 0]
x[!is.na(x) & x > 0]
x(c(3,5,7))
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- C(11, 2, na)
vect2 <- C(11, 2, NA)
vect2 <- C(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_v)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
swirl()
