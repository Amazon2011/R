which.max(x)
length(x)
mean(x)
median(x)
x <- 1:5
x
mean(x)
median(x)
var(x)
cor(x)
x
y
x < seq(0.5:2, 0.5)
x < seq(0.5:2)
x < seq(2:8, 2)
x <- seq(0.5:2, 0.5)
x <- seq(2:8, 2)
x <- seq(0.5,2, 0.5)
x
x
y
cov(x,y)
cor(x,y)
range(x)
round(x, 2)
round(x, 3)
round(x, 0)
x
rev(x)
sort(x)
rev(sort(x))
rank(x)
log(x, 1)
log(x, 2)
log(x, 10)
x
x <- 1:4
log(x, 2)
scale(x)
x
scale(x)
x
y
pmin(x,y)
x <- c(1, 2, 4, 5);y <- c(5, 2, 1, 8))
x <- c(1, 2, 4, 5);y <- c(5, 2, 1, 8)
pmin(x,y)
pmax(x,y)
x
comsum(x)
cumsum(x)
cumprod(x)
cummin(x)
cummax(x)
x
y
match(x,y)
which(x == 4)
x[x == 4] <- 20
x
x[x >= 5]
x[1]
x[1:4)
x[1:4]
?choose
choose(4, 1)
choose(4, 2)
choose(10, 2)
na.omit(match(x,y))
na.fail(x)
x
na.fail(match(x,y))
unique(x)
x <- rep(1, 5)
x
x <- rep(1:2, 5)
x
unique(x)
table(x)
table(x, y)
y
x <- c(1, 2, 4, 5)
table(x, y)
x
subset(x, x<5)
sample(x, 2)
sample(x, 2)
sample(x, 2)
m1 <- matrix(1, nr = 2, nc = 2)
m1
m2 <- matrix(2, nr = 2, nc = 2)
m2
rbind(m1, m2)
cbind(m1, m2)
m2 <- matrix(2, nr = 3, nc = 3)
rbind(m1, m2)
m2 <- matrix(2, nr = 3, nc = 2)
rbind(m1, m2)
m2 <- matrix(2, nr = 2, nc = 3)
rbind(m1, m2)
cbind(m1, m2)
m2 <- matrix(2, nr = 2, nc = 2)
cbind(m1, m2)
rbind(m1, m2)
m1 * m2
m1 %*% m2
rbind(m1, m2) %*% c(m1, m2)
rbind(m1, m2) %*% cbind(m1, m2)
cbind(m1, m2) %*% rbind(m1, m2)
m1
m2
t(rbind(m1,m2))
diag(m1)
diag(m1) <- 10
m1
diag(3)
v <- c(10,20,30)
diag(v)
diag(2, nr = 2, nc = 4)
rm(v)
m1 <- matrix(1:9, nr = 3)
m1
solve(m1)
solve.default(m1)
?solve
solve.help()
help.solve()
m1
m2
m1 %o% m2
x
x
m1
eigen(x)
eigen(m1)
demo(graphics)
demo(graphics)
demo(persp)
x11()
x11();x11();pdf()
dev.list()
dev.list()
dev.cur()
dev.off()
dev.cur()
x11()
split.screen(c(1,2))
dev.cur()
x11()
layout(matrix(1:4,2,2))
layout.show
layout.show(4)
layout(matrix(1:6,3,2))
layout.show(6)
layout.show(3)
layout.show(4)
layout(matrix(1:3,2,2))
layout(matrix(c(1:3,3),2,2))
layout.show(4)
dev.cur()
dev.cur()
x11()
layout(matrix(c(1:3,3),2,2))
layout.show(4)
layout.show(3)
layout(matrix(1:4,2,2))
layout.show(3)
layout.show(5)
layout(matrix(c(1:3,3),2,2))
layout.show(3)
m <- matrix(1:4, 2, 2)
layout(m, widths=c(1,3), height=c(3,1))
layout.show(4)
m <- matrix(c(1, 2, 1, 1),2,2)
layout(m, widths=c(2,1), height=c(1,2))
layout.show(2)
m <- matrix(c(1, 1, 2, 1),2,2)
layout(m, widths=c(2,1), height=c(1,2))
layout.show(2)
layout(m, widths=c(1,2), height=c(2,1))
layout.show(2)
layout(m, widths=c(2,1), height=c(1,2))
layout.show(2)
m <- matrix(rep(0, 4),2,2)
layout(m, widths=c(2,1), height=c(1,2))
m
m <- matrix(rep(0, ),2,2)
m <- matrix(0:3,2,2)
layout(m, widths=c(2,1), height=c(1,2))
layout.show(4)
layout.show(3)
m <- matrix(scan(), 5, 5)
m <- matrix(c(0,1,1,1,0,1,1,1,0), 3, 3)
layout(m)
layout.show(1)
layout.show(2)
m
m <- matrix(c(0,1,2,3,0,4,5,6,0), 3, 3)
layout(m)
layout.show(6)
x
x <- 1:15
plox(x)
plot(x)
plot(x)
q()
x
y
y <- lg(x)
y <- log(x)
y
plot(y)
plot(x,y)
sunflowerplot(x, y)
pie(x)
boxplot(x)
stripchart(x)
dotchart(x)
5.83/4.64
x
x <1:4
x <- 1:4
x
x <- matrix(1:4,2,2)
x
fourfoldplot(x)
assocplot(x)
mosaicplot(x)
pairs(x)
plot.ts(x)
ts.plot(x)
hist(x)
x
x <- 1:15
hist(x)
barplot(x£©
barplot(x£©
hist(x)
barplot(x£©
barplot(x)
stars(x)
x <- matrix(1:4,2,2)
stars(x)
barplot(x)
x <- 1:15
barplot(x)
barplot(x, xlim=c(0:16),ylim=c(0:15),xlab="cumnumber",ylab="value",main="barplot",sub="example")
barplot(x, xlim=c(0,16),ylim=c(0,15),xlab="cumnumber",ylab="value",main="barplot",sub="example")
points(1,2)
points(5,2)
lines(1,2)
lines(3,2)
lines(c(1,2),c(2,4))
lines(c(1,2),c(12,5))
lines(c(1,2),c(12,15))
lines(c(1,2),c(12,15))
lines(c(1,2),c(12,30))
lines(c(1,2),c(12,30))
text(2,2,"point")
abline(1,1)
segments(1,1,4,4)
abline(h=1)
abline(v=1)
rect(1,1,8,8)
polygon(1,3)
polygon(1,7)
legend(1,2,"dfsa")
title()
title("dd")
box()
text(8,8,expression(p == over(1, 1+e^-(beta*x+alpha))))
Rsquared
Rsquared
text(x, y, as.expression(substitute(R^2==r, list(r=0.99999))))
text(10, 10, as.expression(substitute(R^2==r, list(r=0.99999))))
text(10, 10, as.expression(substitute(italic(R)^2==r, list(r=0.99999))))
x
x <- rnorm(10)
y <- rnorm(10)
x
y
x11
x11()
plot(x,y)
opar <- par()
par(bg="lightyellow", col.axis="blue", mar=c(4, 4, 2.5, 0.25))
plot(x, y, xlab="Ten random values", ylab="Ten other values",
xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow",
bty="l", tcl=-.25, las=1, cex=1.5)
title("How to customize a plot with R (bis)", font.main=3, adj=1)
par(opar)
title("How to customize a plot with R (bis)", font.main=3, adj=1)
title("How to customize a plot with R (bis)", font.main=3, adj=1)
par(bg="lightyellow", col.axis="blue", mar=c(4, 4, 2.5, 0.25))
plot(x, y, xlab="Ten random values", ylab="Ten other values",
xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red", bg="yellow",
bty="l", tcl=-.25, las=1, cex=1.5)
title("How to customize a plot with R (bis)", font.main=3, adj=1)
q()
data
data(InsectSprays)
InsecSprays
InsectSprays
aov.spray <- aov(sqrt(count) ~ spray, InsectSprays)
aov.spray
plot(InsectSprays$count~InsectSprays$spray)
q()
summary(aov.spray)
plot(aov.spray)
opar <- par()
par(mfcol = c(2,2))
plot(aov.spray)
par(opar)
names(aov.spray)
avo.spray$coefficients
aov.spray$coefficients
q()
aov.spray$coefficients
search()
library(help = stats)
ls()
fill
ls()
z0
x
y
w
w <- Binomial()
w <- Binomial(1)
search()
library(help = stats)
w <- Binomial()
w <- Binomial
library(help = stats)
w <- rnorm()
w <- rnorm(1)
w
w <- rnorm(0)
w
w <- rnorm(0,1)
w
w
w <- rnorm(10,0,1)
w
w <- Binomial(10)
w <- Binomial(10,1)
w <- Binomial(10,1,1)
w <- rnorm(10,0,1)
w
library(help = datasets)
data(AirPassengers)
AirPassengers
plot(AirPassengers)
lm(AirPassengers)
chooseCRANmirror()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
library(help = cluster)
data(animals)
animals
library(help = cluster)
library(help = cluster)
q()
update.packages()
x
y <- numeric(length(x))
for (i in 1:length(x)) y[i] <- x[i]
;
y <- numeric(length(x))
for (i in 1:length(x)) y[i] <- x[i];
y
y <- numeric(length(x))
for (i in 1:length(x)) y[i] <- 0
y
y <- numeric(length(x))
for (i in 1:length(x)) {
y[i] <- 1
}
y
?cbind
cbind(x,y)
X <- cbind(x,y)
apply(X, 2, mean)
apply(X, 2, sd)
sample(1:52,4)
sample(1:52,4)
sample(1:52,4)
sample(1:52,4)
sample(1:52,4)
sample(1:52,4)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,4,replace=TRUE)
sample(1:52,55,replace=TRUE)
sample(1:52,55)
sample(c("H", "T"), 10, replace = TRUE)
sample(1:6, 10, replace = TRUE)
sample(1:6, 10, replace = TRUE)
sample(1:6, 10, replace = TRUE)
sample(1:6, 3, replace = TRUE)
sample(1:6, 3, replace = TRUE)
sample(1:6, 3, replace = TRUE)
sample(1:6, 3, replace = TRUE)
sample(1:6, 3, replace = TRUE)
sample(1:6, 3, replace = TRUE)
sample(1:6, 3, replace = TRUE)
sample(1:6, 3, replace = TRUE)
sample(1:6, 3, replace = TRUE)
sample(1:6, 3, replace = TRUE)
sample(1:6, 3, replace = TRUE)
sample(1:6, 3, replace = TRUE)
sum(1:2)
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
sum(sample(1:6, 3, replace = TRUE))
rep(sum(sample(1:6, 3, replace = TRUE)),10)
y <- c(sum(sample(1:6, 3, replace = TRUE)),10)
y
y <- numeric(10)
for (i in 1:length(y)) y[i] = sum(sample(1:6, 3, replace = TRUE)),10)
for (i in 1:10) y[i] = sum(sample(1:6, 3, replace = TRUE)),10)
for (i in 1:length(y)) y[i] <- sum(sample(1:6, 3, replace = TRUE)),10)
for (i in 1:length(y)) y[i] <- sum(sample(1:6, 3, replace = TRUE),10)
y
for (i in 1:length(y)) y[i] <- sum(sample(1:6, 3, replace = TRUE))
y
for (i in 1:length(y)) y[i] <- sum(sample(1:6, 3, replace = TRUE))
y
for (i in 1:length(y)) y[i] <- sum(sample(1:6, 3, replace = TRUE))
y
for (i in 1:length(y)) y[i] <- sum(sample(1:6, 3, replace = TRUE))
y
for (i in 1:length(y)) y[i] <- sum(sample(1:6, 3, replace = TRUE))
y
for (i in 1:length(y)) y[i] <- sum(sample(1:6, 3, replace = TRUE))
y
sample(c(1, 0), 10, replace = TRUE, c(0.9, 0.1))
sample(c(1, 0), 10, replace = TRUE, c(0.9, 0.1))
sample(c(1, 0), 10, replace = TRUE, c(0.9, 0.1))
sample(c(1, 0), 10, replace = TRUE, c(0.9, 0.1))
sample(c(1, 0), 10, replace = TRUE, c(0.9, 0.1))
sample(c(1, 0), 10, replace = TRUE, c(0.9, 0.1))
sample(c(1, 0), 10, replace = TRUE, c(0.9, 0.1))
sample(c(1, 0), 10, replace = TRUE, c(0.9, 0.1))
sample(c(1, 0), 10, replace = TRUE, c(0.9, 0.1))
sample(c(1, 0), 10, replace = TRUE, c(0.9, 0.1))
sample(c(1, 0), 10, replace = TRUE, c(0.9, 0.1))
1/choose(52, 4)
q()
getwd()
q()
getwd()
ls()
load("D:\\GitHub\\R\\.RData")
q()
getwd()
ls()
load("D:\\GitHub\\R\\.RData")
ls()
load("D:\\GitHub\\R\\.RData")
ls()
q()
